// Script de diagn√≥stico para problemas de email
const nodemailer = require('nodemailer');
require('dotenv').config({ path: '.env.local' });

async function diagnosticarEmail() {
  console.log('üîç DIAGN√ìSTICO DE EMAIL MANDRILL');
  console.log('=' .repeat(50));
  
  // 1. Verificar vari√°veis de ambiente
  console.log('\nüìã 1. VERIFICANDO VARI√ÅVEIS DE AMBIENTE:');
  console.log('MANDRILL_API_KEY:', process.env.MANDRILL_API_KEY ? '‚úÖ Configurada' : '‚ùå N√£o encontrada');
  console.log('SMTP_HOST:', process.env.SMTP_HOST || 'smtp.mandrillapp.com');
  console.log('SMTP_PORT:', process.env.SMTP_PORT || '587');
  console.log('SMTP_USERNAME:', process.env.SMTP_USERNAME || 'E-Koerner');
  console.log('FROM_EMAIL:', process.env.OUVIDORIA_FROM_EMAIL || 'N√£o configurado');

  // 2. Testar conex√£o SMTP
  console.log('\nüîå 2. TESTANDO CONEX√ÉO SMTP:');
  
  const transporter = nodemailer.createTransport({
    host: process.env.SMTP_HOST || 'smtp.mandrillapp.com',
    port: parseInt(process.env.SMTP_PORT || '587'),
    secure: false,
    auth: {
      user: process.env.SMTP_USERNAME || 'E-Koerner',
      pass: process.env.MANDRILL_API_KEY,
    },
    debug: true, // Habilitar logs detalhados
    logger: true
  });

  try {
    await transporter.verify();
    console.log('‚úÖ Conex√£o SMTP OK');
  } catch (error) {
    console.error('‚ùå Erro na conex√£o SMTP:', error.message);
    return;
  }

  // 3. Testar com diferentes configura√ß√µes
  console.log('\nüì§ 3. TENTANDO ENVIOS COM DIFERENTES CONFIGURA√á√ïES:');
  
  const testEmails = [
    {
      name: 'Teste 1 - Email Simples',
      options: {
        from: 'noreply@koerner.com.br',
        to: 'nnvljr86@gmail.com',
        subject: 'Teste 1 - Email Simples Koerner',
        text: 'Este √© um teste simples de email do Koerner Tabelionato.',
        html: '<p>Este √© um <strong>teste simples</strong> de email do Koerner Tabelionato.</p>'
      }
    },
    {
      name: 'Teste 2 - Com From Configurado',
      options: {
        from: process.env.OUVIDORIA_FROM_EMAIL || 'contato@e-koerner.com.br',
        to: 'nnvljr86@gmail.com',
        subject: 'Teste 2 - Com From Configurado',
        text: 'Teste com o email de origem configurado no .env.local',
        html: '<p>Teste com o <strong>email de origem configurado</strong> no .env.local</p>'
      }
    },
    {
      name: 'Teste 3 - Mandrill Headers',
      options: {
        from: 'teste@koerner.com.br',
        to: 'nnvljr86@gmail.com',
        subject: 'Teste 3 - Com Headers Mandrill',
        text: 'Teste com headers espec√≠ficos do Mandrill',
        html: '<p>Teste com <strong>headers espec√≠ficos</strong> do Mandrill</p>',
        headers: {
          'X-MC-Tags': 'teste,koerner',
          'X-MC-Track': 'opens,clicks'
        }
      }
    }
  ];

  for (const test of testEmails) {
    try {
      console.log(`\nüìß Enviando: ${test.name}`);
      const info = await transporter.sendMail(test.options);
      console.log(`‚úÖ ${test.name} - Enviado!`);
      console.log(`   Message ID: ${info.messageId}`);
      console.log(`   Response: ${info.response}`);
    } catch (error) {
      console.error(`‚ùå ${test.name} - Erro:`, error.message);
      if (error.responseCode) {
        console.error(`   C√≥digo: ${error.responseCode}`);
      }
    }
  }

  // 4. Informa√ß√µes adicionais
  console.log('\nüîç 4. DICAS PARA SOLU√á√ÉO:');
  console.log('‚Ä¢ Verifique a caixa de SPAM do Gmail');
  console.log('‚Ä¢ Aguarde at√© 5 minutos para entrega');
  console.log('‚Ä¢ Verifique se o dom√≠nio est√° verificado no Mandrill');
  console.log('‚Ä¢ Teste com outro email de destino');
  console.log('‚Ä¢ Acesse o painel Mandrill para logs: https://mandrillapp.com/activity');
  
  console.log('\n‚úÖ Diagn√≥stico conclu√≠do!');
}

// Executar diagn√≥stico
diagnosticarEmail().catch(console.error);